FB
FB<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS))
FB
FB<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS))%>%
summarize(COBIA=mean(AVAILABLE_COBIA))
summarize(BASS=mean(AVAILABLE_BASS),COBIA=mean(AVAILABLE_COBIA)
FB
FB<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS),COBIA=mean(AVAILABLE_COBIA))
FB
AVAI_F_s<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS),COBIA=mean(AVAILABLE_COBIA),DRUM=mean(AVAILABLE_DRUM),
FLOUNDER=mean(AVAILABLE_FLOUNDER),ASALMON=mean(AVAILABLE_A_SALMON),PSALMON=mean(AVAILABLE_P_SALMON),
STURGEON=mean(AVAILABLE_STURGEON), STURGEON=mean(AVAILABLE_OTHER_FIN))
AVAI_F_s
AVAI_F_s<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS),COBIA=mean(AVAILABLE_COBIA),DRUM=mean(AVAILABLE_DRUM),
FLOUNDER=mean(AVAILABLE_FLOUNDER),ASALMON=mean(AVAILABLE_A_SALMON),PSALMON=mean(AVAILABLE_P_SALMON),
STURGEON=mean(AVAILABLE_STURGEON), OTHER=mean(AVAILABLE_OTHER_FIN))
AVAI_F_s
AVAI_F_s$TOTAL<-(AVAI_F_s[,2]+AVAI_F_s[,3]+AVAI_F_s[,4]+AVAI_F_s[,5]+AVAI_F_s[,6]+AVAI_F_s[,7]+AVAI_F_s[,8]+AVAI_F_s[,9])/8
AVAI_F_s
AVAI_F_s<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(AVAILABLE_BASS),COBIA=mean(AVAILABLE_COBIA),DRUM=mean(AVAILABLE_DRUM),
FLOUNDER=mean(AVAILABLE_FLOUNDER),ASALMON=mean(AVAILABLE_A_SALMON),PSALMON=mean(AVAILABLE_P_SALMON),
STURGEON=mean(AVAILABLE_STURGEON), OTHER=mean(AVAILABLE_OTHER_FIN))
AVAI_F_s<-as.data.frame(AVAI_F_s)
AVAI_C_s<-AVAI_C%>%
group_by(STATE) %>%
summarize(CRABS=mean(AVAILABLE_CRABS),LOBSTER=mean(AVAILABLE_LOBSTER),SHRIMP=mean(AVAILABLE_SHRIMP),
CRUSTACEANS=mean(AVAILABLE_CRUSTACEANS))
AVAI_F_s$TOTAL<-(AVAI_F_s[,2]+AVAI_F_s[,3]+AVAI_F_s[,4]+AVAI_F_s[,5]+AVAI_F_s[,6]+AVAI_F_s[,7]+AVAI_F_s[,8]+AVAI_F_s[,9])/8
AVAI_F_s
AVAI_C_s<-AVAI_C%>%
group_by(STATE) %>%
summarize(CRABS=mean(AVAILABLE_CRABS),LOBSTER=mean(AVAILABLE_LOBSTER),SHRIMP=mean(AVAILABLE_SHRIMP),
CRUSTACEANS=mean(AVAILABLE_CRUSTACEANS))
AVAI_C_s<-as.data.frame(AVAI_C_s)
AVAI_C_s$TOTAL<-(AVAI_C_s[,2]+AVAI_C_s[,3]+AVAI_C_s[,4]+AVAI_C_s[,5])/4
AVAI_C_s
AVAI_M_s<-AVAI_M%>%
group_by(STATE) %>%
summarize(ABALONE=mean(AVAILABLE_ABALONE),CLAMS=mean(AVAILABLE_CLAMS),MUSSELS=mean(AVAILABLE_MUSSELS),OYSTERS=mean(AVAILABLE_OYSTERS),
SCALLOPS=mean(AVAILABLE_SCALLOPS),MOLLUSKS=mean(AVAILABLE_MOLLUSKS))
AVAI_M_s<-as.data.frame(AVAI_M_s)
AVAI_M_s$TOTAL<-(AVAI_M_s[,2]+AVAI_M_s[,3]+AVAI_M_s[,4]+AVAI_M_s[,5]+AVAI_M_s[,6]+AVAI_M_s[,7])/6
AVAI_M_s
AVAI_V_s<-AVAI_V%>%
group_by(STATE) %>%
summarize(SEAV=mean(AVAILABLE_SEA_V))
AVAI_V_s<-as.data.frame(AVAI_V_s)
AVAI_V_s
#CONSUMPTION_______________________________________________________________________
CON_F<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","CONSUMED_BASS","CONSUMED_COBIA","CONSUMED_DRUM","CONSUMED_FLOUNDER",
"CONSUMED_HALIBUT", "CONSUMED_A_SALMON","CONSUMED_P_SALMON","CONSUMED_STURGEON","CONSUMED_OTHER_FIN")
CON_C<-select(aquaD,"FINAL_WEIGHT", "STATE","REGIONS","CONSUMED_CRABS","CONSUMED_LOBSTER","CONSUMED_SHRIMP","CONSUMED_CRUSTACEANS")
CON_M<-select(aquaD,"FINAL_WEIGHT", "STATE","REGIONS","CONSUMED_ABALONE","CONSUMED_CLAMS","CONSUMED_MUSSELS","CONSUMED_OYSTERS","CONSUMED_SCALLOPS",
"CONSUMED_MOLLUSKS","CONSUMED_SEA_V")
CON_V<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","CONSUMED_SEA_V")
CON_F_s<-AVAI_F%>%
group_by(STATE) %>%
summarize(BASS=mean(CONSUMED_BASS),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=mean(CONSUMED_BASS),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-as.data.frame(CON_F_s)
CON_F_s$TOTAL<-(CON_F_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5]+CON_F_s[,6]+CON_F_s[,7]+CON_F_s[,8]+CON_F_s[,9]+CON_F_s[,10])/9
CON_F_s
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=mean(CONSUMED_BASS*FINAL_WEIGHT),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-as.data.frame(CON_F_s)
CON_F_s$TOTAL<-(CON_F_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5]+CON_F_s[,6]+CON_F_s[,7]+CON_F_s[,8]+CON_F_s[,9]+CON_F_s[,10])/9
CON_F_s
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=(CONSUMED_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=n(CONSUMED_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS(CONSUMED_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
sum(CON_F$FINAL_WEIGHT)
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=(CONSUMED_BASS*FINAL_WEIGHT)/sum(FINAL_WEIGHT),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=weighted.mean(CONSUMED_BASS*FINAL_WEIGHT,FINAL_WEIGHT),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-as.data.frame(CON_F_s)
CON_F_s$TOTAL<-(CON_F_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5]+CON_F_s[,6]+CON_F_s[,7]+CON_F_s[,8]+CON_F_s[,9]+CON_F_s[,10])/9
CON_F_s
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=mean(CONSUMED_BASS*FINAL_WEIGHT,FINAL_WEIGHT),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=sum(CONSUMED_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=mean(CONSUMED_COBIA),DRUM=mean(CONSUMED_DRUM),
FLOUNDER=mean(CONSUMED_FLOUNDER),HALIBUT=mean(CONSUMED_HALIBUT), ASALMON=mean(CONSUMED_A_SALMON),
PSALMON=mean(CONSUMED_P_SALMON), STURGEON=mean(CONSUMED_STURGEON), OTHER=mean(CONSUMED_OTHER_FIN))
CON_F_s<-as.data.frame(CON_F_s)
CON_F_s$TOTAL<-(CON_F_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5]+CON_F_s[,6]+CON_F_s[,7]+CON_F_s[,8]+CON_F_s[,9]+CON_F_s[,10])/9
CON_F_s
CON_F_s<-CON_F%>%
group_by(STATE) %>%
summarize(BASS=sum(CONSUMED_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=sum(CONSUMED_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
DRUM=sum(CONSUMED_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT)),FLOUNDER=sum(CONSUMED_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
HALIBUT=sum(CONSUMED_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT)), ASALMON=sum(CONSUMED_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
PSALMON=sum(CONSUMED_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)), STURGEON=sum(CONSUMED_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
OTHER=sum(CONSUMED_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
CON_F_s<-as.data.frame(CON_F_s)
CON_F_s$TOTAL<-(CON_F_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5]+CON_F_s[,6]+CON_F_s[,7]+CON_F_s[,8]+CON_F_s[,9]+CON_F_s[,10])/9
CON_F_s
CON_C_s<-CON_C%>%
group_by(STATE) %>%
summarize(CRABS=sum(CONSUMED_CRABS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),LOBSTERS=sum(CONSUMED_LOBSTER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
SHRIMP=sum(CONSUMED_SHRIMP*FINAL_WEIGHT/sum(FINAL_WEIGHT)),OTHER=sum(CONSUMED_CRUSTACEANS*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
CON_C_s<-as.data.frame(CON_C_s)
CON_C_s$TOTAL<-(CON_C_s[,2]+CON_F_s[,3]+CON_F_s[,4]+CON_F_s[,5])/4
CON_C_s
#PREFERENCE_________________________________________________________________________
PREF_F<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","LIKE_BASS","LIKE_COBIA","LIKE_DRUM","LIKE_FLOUNDER","LIKE_HALIBUT",
"LIKE_A_SALMON","LIKE_P_SALMON","LIKE_STURGEON","LIKE_OTHER_FIN")
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT)),FLOUNDER=mean(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
HALIBUT=mean(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT)),ASALMON=mean(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
PSALMON=mean(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)), STURGEON=mean(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
OTHER=mean(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
PREF_F_s<-as.data.frame(AVAI_F_s)
PREF_F_s
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT)),FLOUNDER=mean(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
HALIBUT=mean(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT)),ASALMON=mean(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
PSALMON=mean(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)), STURGEON=mean(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
OTHER=mean(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
#PREFERENCE_________________________________________________________________________
PREF_F<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","LIKE_BASS","LIKE_COBIA","LIKE_DRUM","LIKE_FLOUNDER","LIKE_HALIBUT",
"LIKE_A_SALMON","LIKE_P_SALMON","LIKE_STURGEON","LIKE_OTHER_FIN")
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT)),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT)),FLOUNDER=mean(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
HALIBUT=mean(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT)),ASALMON=mean(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
PSALMON=mean(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)), STURGEON=mean(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
OTHER=mean(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
#PREFERENCE_________________________________________________________________________
PREF_F<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","LIKE_BASS","LIKE_COBIA","LIKE_DRUM","LIKE_FLOUNDER","LIKE_HALIBUT",
"LIKE_A_SALMON","LIKE_P_SALMON","LIKE_STURGEON","LIKE_OTHER_FIN")
PREF_V
PREF_F
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT)),FLOUNDER=mean(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
HALIBUT=mean(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT)),ASALMON=mean(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
PSALMON=mean(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT)), STURGEON=mean(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT)),
OTHER=mean(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT)))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
HALIBUT=sum(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),ASALMON=sum(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
PSALMON=sum(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE), STURGEON=sum(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
OTHER=sum(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),FLOUNDER=mean(LIKE_FLOUNDER,na.rm = TRUE),
HALIBUT=sum(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),ASALMON=sum(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
PSALMON=sum(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE), STURGEON=sum(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
OTHER=sum(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
HALIBUT=sum(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),ASALMON=sum(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
PSALMON=sum(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE), STURGEON=sum(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
OTHER=sum(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=mean(LIKE_FLOUNDER))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=mean(LIKE_FLOUNDER, na.rm = TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT, na.rm = TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/FINAL_WEIGHT, na.rm = TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/sum(FINAL_WEIGHT), na.rm = TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT, na.rm = TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=(sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE)/sum(FINAL_WEIGHT,na.rm=TRUE)))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(FINAL_WEIGHT,na.rm=TRUE))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(LIKE_FLOUNDER,FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(filter(!is.na(LIKE_FLOUNDER),FINAL_WEIGHT)))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(!is.na(LIKE_FLOUNDER),FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(is.na(LIKE_FLOUNDER),FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
filter(!is.na(clade)) %>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
filter(!is.na(LIKE_FLOUNDER)) %>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(filter(!is.na(LIKE_FLOUNDER),FINAL_WEIGHT)))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(filter(PREF_F,!is.na(LIKE_FLOUNDER),FINAL_WEIGHT)))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(LIKE_FLOUNDER!=NA,FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum((LIKE_FLOUNDER,na.rm=TRUE),FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum((LIKE_FLOUNDER!is.na),FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum((PREF_F[!is.na(LIKE_FLOUNDER])),FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum((PREF_F[!is.na(LIKE_FLOUNDER)]),FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum((PREF_F[!is.na(PREF_F$LIKE_FLOUNDER)]),FINAL_WEIGHT))
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(PREF_F[!is.na(PREF_F$LIKE_FLOUNDER),],FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(PREF_F[!is.na(PREF_F$LIKE_FLOUNDER),FINAL_WEIGHT]))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(PREF_F[!is.na(PREF_F$LIKE_FLOUNDER),]))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(PREF_F[!is.na(PREF_F$LIKE_FLOUNDER),]$FINAL_WEIGHT))
test
test<-PREF_F_s<-PREF_F%>%
group_by(STATE)%>%
summarize(FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT,na.rm=TRUE),TW=sum(LIKE_FLOUNDER*FINAL_WEIGHT/LIKE_FLOUNDER,na.rm=TRUE))
test
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/sum(LIKE_FLOUNDER*FINAL_WEIGHT/LIKE_FLOUNDER,na.rm=TRUE),na.rm = TRUE),
HALIBUT=sum(LIKE_HALIBUT*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),ASALMON=sum(LIKE_A_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
PSALMON=sum(LIKE_P_SALMON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE), STURGEON=sum(LIKE_STURGEON*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE),
OTHER=sum(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(FINAL_WEIGHT),na.rm = TRUE))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
PREF_F_s<-PREF_F%>%
group_by(STATE) %>%
summarize(BASS=sum(LIKE_BASS*FINAL_WEIGHT/sum(LIKE_BASS*FINAL_WEIGHT/LIKE_BASS,na.rm=TRUE),na.rm = TRUE),
COBIA=sum(LIKE_COBIA*FINAL_WEIGHT/sum(LIKE_COBIA*FINAL_WEIGHT/LIKE_COBIA,na.rm=TRUE),na.rm = TRUE),
DRUM=sum(LIKE_DRUM*FINAL_WEIGHT/sum(LIKE_DRUM*FINAL_WEIGHT/LIKE_DRUM,na.rm=TRUE),na.rm = TRUE),
FLOUNDER=sum(LIKE_FLOUNDER*FINAL_WEIGHT/sum(LIKE_FLOUNDER*FINAL_WEIGHT/LIKE_FLOUNDER,na.rm=TRUE),na.rm = TRUE),
HALIBUT=sum(LIKE_HALIBUT*FINAL_WEIGHT/sum(LIKE_HALIBUT*FINAL_WEIGHT/LIKE_HALIBUT,na.rm=TRUE),na.rm = TRUE),
ASALMON=sum(LIKE_A_SALMON*FINAL_WEIGHT/sum(LIKE_A_SALMON*FINAL_WEIGHT/LIKE_A_SALMON,na.rm=TRUE),na.rm = TRUE),
PSALMON=sum(LIKE_P_SALMON*FINAL_WEIGHT/sum(LIKE_P_SALMON*FINAL_WEIGHT/LIKE_P_SALMON,na.rm=TRUE),na.rm = TRUE),
STURGEON=sum(LIKE_STURGEON*FINAL_WEIGHT/sum(LIKE_STURGEON*FINAL_WEIGHT/LIKE_STURGEON,na.rm=TRUE),na.rm = TRUE),
OTHER=sum(LIKE_OTHER_FIN*FINAL_WEIGHT/sum(LIKE_OTHER_FIN*FINAL_WEIGHT/LIKE_OTHER_FIN,na.rm=TRUE),na.rm = TRUE))
PREF_F_s<-as.data.frame(PREF_F_s)
PREF_F_s
PREF_F_s$TOTAL<-(PREF_F_s[,2]+PREF_F_s[,3]+PREF_F_s[,4]+PREF_F_s[,5]+PREF_F_s[,6]+PREF_F_s[,7]+PREF_F_s[,8]+PREF_F_s[,9]+PREF_F_s[,10])/9
PREF_F_s
PREF_C<-select(aquaD, "FINAL_WEIGHT","STATE","REGIONS","LIKE_CRABS","LIKE_LOBSTER","LIKE_SHRIMP","LIKE_CRUSTACEANS")
PREF_M<-select(aquaD,"FINAL_WEIGHT", "STATE","REGIONS","LIKE_ABALONE","LIKE_CLAMS","LIKE_MUSSELS","LIKE_OYSTERS","LIKE_SCALLOPS",
"LIKE_MOLLUSKS")
PREF_V<-select(aquaD,"FINAL_WEIGHT", "STATE","REGIONS","LIKE_SEA_V")
PREF_C_s<-PREF_C%>%
group_by(STATE) %>%
summarize(CRABS=sum(LIKE_CRABS*FINAL_WEIGHT/sum(LIKE_CRABS*FINAL_WEIGHT/LIKE_CRABS,na.rm=TRUE),na.rm = TRUE),
LOBSTER=sum(LIKE_LOBSTER*FINAL_WEIGHT/sum(LIKE_LOBSTER*FINAL_WEIGHT/LIKE_LOBSTER,na.rm=TRUE),na.rm = TRUE),
SHRIMP=sum(LIKE_SHRIMP*FINAL_WEIGHT/sum(LIKE_SHRIMPM*FINAL_WEIGHT/LIKE_SHRIMP,na.rm=TRUE),na.rm = TRUE),
OTHER=sum(LIKE_CRUSTACEANS*FINAL_WEIGHT/sum(LIKE_CRUSTACEANS*FINAL_WEIGHT/LIKE_CRUSTACEANS,na.rm=TRUE),na.rm = TRUE))
PREF_C_s<-as.data.frame(PREF_C_s)
PREF_C_s$TOTAL<-(PREF_C_s[,2]+PREF_C_s[,3]+PREF_C_s[,4]+PREF_C_s[,5])/4
PREF_C_s<-PREF_C%>%
group_by(STATE) %>%
summarize(CRABS=sum(LIKE_CRABS*FINAL_WEIGHT/sum(LIKE_CRABS*FINAL_WEIGHT/LIKE_CRABS,na.rm=TRUE),na.rm = TRUE),
LOBSTER=sum(LIKE_LOBSTER*FINAL_WEIGHT/sum(LIKE_LOBSTER*FINAL_WEIGHT/LIKE_LOBSTER,na.rm=TRUE),na.rm = TRUE),
SHRIMP=sum(LIKE_SHRIMP*FINAL_WEIGHT/sum(LIKE_SHRIMP*FINAL_WEIGHT/LIKE_SHRIMP,na.rm=TRUE),na.rm = TRUE),
OTHER=sum(LIKE_CRUSTACEANS*FINAL_WEIGHT/sum(LIKE_CRUSTACEANS*FINAL_WEIGHT/LIKE_CRUSTACEANS,na.rm=TRUE),na.rm = TRUE))
PREF_C_s<-as.data.frame(PREF_C_s)
PREF_C_s$TOTAL<-(PREF_C_s[,2]+PREF_C_s[,3]+PREF_C_s[,4]+PREF_C_s[,5])/4
PREF_C_s
PREF_M_s<-PREF_M%>%
group_by(STATE) %>%
summarize(ABALONE=sum(LIKE_ABALONE*FINAL_WEIGHT/sum(LIKE_ABALONE*FINAL_WEIGHT/LIKE_ABALONE,na.rm=TRUE),na.rm = TRUE),
CLAMS=sum(LIKE_CLAMS*FINAL_WEIGHT/sum(LIKE_CLAMS*FINAL_WEIGHT/LIKE_CLAMS,na.rm=TRUE),na.rm = TRUE),
MUSSELS=sum(LIKE_MUSSELS*FINAL_WEIGHT/sum(LIKE_MUSSELS*FINAL_WEIGHT/LIKE_MUSSELS,na.rm=TRUE),na.rm = TRUE),
OYSTERS=sum(LIKE_OYSTERS*FINAL_WEIGHT/sum(LIKE_OYSTERS*FINAL_WEIGHT/LIKE_OYSTERS,na.rm=TRUE),na.rm = TRUE),
SCALLOPS=sum(LIKE_SCALLOPS*FINAL_WEIGHT/sum(LIKE_SCALLOPS*FINAL_WEIGHT/LIKE_SCALLOPS,na.rm=TRUE),na.rm = TRUE),
OTHER=sum(LIKE_MOLLUSKS*FINAL_WEIGHT/sum(LIKE_MOLLUSKS*FINAL_WEIGHT/LIKE_MOLLUSKS,na.rm=TRUE),na.rm = TRUE))
PREF_M_s<-as.data.frame(PREF_M_s)
PREF_M_s
PREF_M_s$TOTAL<-(PREF_M_s[,2]+PREF_M_s[,3]+PREF_M_s[,4]+PREF_M_s[,5]+PREF_M_s[,6]+PREF_M_s[,7])/6
PREF_M_s
library(leaflet)
library(sf)
file_name <- system.file("STATES.shp", package="sf")
nc <- st_read(file_name)
file_name <- system.file("/STATES.shp", package="sf")
nc <- st_read(file_name)
file_name <- system.file("C:/Users/Inheed/Documents/R/AquaC/STATES.shp", package="sf")
nc <- st_read(file_name)
nc <- st_read("C:/Users/Inheed/Documents/R/AquaC/STATES.shp")
states <- st_read("C:/Users/Inheed/Documents/R/AquaC/STATES.shp")
plot(states)
print(states)
oblastsF<- system.file("/STATES.shp")
oblasts<- readOGR(dsn= oblastsF, layer= "STATES")
library(rgdal)
oblastsF<- system.file("/STATES.shp")
oblasts<- readOGR(dsn= oblastsF, layer= "STATES")
oblasts<- readOGR(dsn= "C:/Users/Inheed/Documents/R/AquaC/STATES.shp", layer= "STATES")
plot(oblasts)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
UNMET<-read.csv("M1_unmetdemand.csv")
UNMET$AVERAGE<-colMeans(UNMET[,-1])
UNMET$AVERAGE<-rowMeans(UNMET[,-1])
UNMET
UNMET$AVERAGE<-round(rowMeans(UNMET[,-1]),2)
UNMET
UNMET$AVERAGE<-round(rowMeans(UNMET[,-1]),0)
UNMET
UNMET[,16]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
tryitL<-round(sum(UNMET[,-1]),2)
tryitL
UNMET$TOTAL<-round(rowMeans(UNMET[,-1]),2) #total unmet demand
UNMET$TOTAL
UNMET
tryitL<-round(rowSums(UNMET[,-1]),2)
tryitL
shiny::runApp()
UNMET
ncol(UNMET)
UNMET1<-UNMET[,-21]
UNMET1
runApp()
SRdata1
ST_data1<-cbind(STATE=FARM$STATE,
as.numeric(FARM_fin),
PAYMORE=as.numeric(PAYMORE[,6]),
LOCATION=as.numeric(LOCATION[,4]),
LOCATIONA=as.numeric(LOCATIONA[,2]),
UNMET=as.numeric(UNMET[,21]))
SRdata1
ST_data1
UNMET<-read.csv("M2_additional.csv")
UNMET
UNMET1
UNMET$TOTAL<-round(rowSums(UNMET[,-1]),2) #total unmet demand
UNMET1<-UNMET[,-21]
UNMET1
UNMET
runApp()
runApp()
runApp()
runApp()
runApp()
